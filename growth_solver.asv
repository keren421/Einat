% syms x(t) y(t) lambda1 lambda2
% eqns = [diff(x,t) == lambda1*x*(1-x-y), diff(y,t) == lambda2*y*(1-x-y)];
% conds = [y(0) == 0.001, x(0) == 0.001];
% sol = dsolve(eqns, conds)
%%
lambda1 = linspace(0,1,100);
lambda2 = linspace(0,1,100);
n0 = 1e-3;
bacteria_growth = @(t,y) [lambda1*y(1)*(1-y(1)-y(2)); ...
                          lambda2*y(2)*(1-y(1)-y(2))];

bacteria_growth_single = @(t,y) lambda1*y*(1-y);

% concentration = y(:,1)*production1 + y(:,2)*production2;
% I = find(concentration>min(resistance1,resistance2),1,'first');

find_steady_t = @(lambda, eps, n0) (1/lambda)*log((1+n0*eps-eps-n0)/(n0*eps));
t1 = find_steady_t(lambda1, 1e-3, n0);
t2 = find_steady_t(lambda2, 1e-3, n0);

[t,y] = ode45(bacteria_growth,[0 min(t1,t2)],intial_pop);
[k1,r1] = fitLogisticGrowth(t,y(:,1),intial_pop(1))
[k2,r2] = fitLogisticGrowth(t,y(:,2),intial_pop(2))

%%
function [k,r] = fitLogisticGrowth(t,y,n0)
    [xData, yData] = prepareCurveData( t, y );

    % Set up fittype and options.
    ft = fittype( ['k/(1+((k-' num2str(n0) ')/' num2str(n0) ')*exp(-r*t))'], 'independent', 't', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.5 1];

    % Fit model to data.
    [fitresult, gof] = fit( xData, yData, ft, opts );
    coeff = coeffvalues(fitresult);
    k = coeff(1);
    r = coeff(2);
    % Plot fit with data.
    figure();
    h = plot( fitresult, xData, yData );
    legend( h, 'y1 vs. t', 'fit result', 'Location', 'NorthEast' );
    title('Population over time')
    % Label axes
    xlabel('t')
    grid on
end